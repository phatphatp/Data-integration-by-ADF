{
	"name": "FactStock",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "WarehouseTable",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DimProduct",
						"type": "DatasetReference"
					},
					"name": "DimProduct"
				},
				{
					"dataset": {
						"referenceName": "DimWarehouse",
						"type": "DatasetReference"
					},
					"name": "DimWarehouse"
				},
				{
					"dataset": {
						"referenceName": "Stock_Fact",
						"type": "DatasetReference"
					},
					"name": "StockFact"
				},
				{
					"dataset": {
						"referenceName": "Order_Fact",
						"type": "DatasetReference"
					},
					"name": "OrderFact"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Stock_Fact",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Lookup1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Lookup2"
				},
				{
					"name": "WarehouseStockInfo"
				},
				{
					"name": "Lookup3"
				},
				{
					"name": "Select3"
				},
				{
					"name": "ModifiedData"
				},
				{
					"name": "Exists1"
				},
				{
					"name": "Lookup4"
				},
				{
					"name": "Select4"
				},
				{
					"name": "Flag"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\tWAREHOUSE_ID as string,\n\t\tNAME as string,\n\t\tLOCATION as string,\n\t\tPRODUCT_NAME as string,\n\t\tTOTAL_STOCK as integer,\n\t\tREORDER_POINT as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tPRODUCT_WK as integer,\n\t\tPRODUCT_ID as string,\n\t\tNAME as string,\n\t\tPRODUCT_DES as string,\n\t\tUNIT_PRICE as decimal(10,2),\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimProduct\nsource(output(\n\t\tWAREHOUSE_WK as integer,\n\t\tWAREHOUSE_ID as string,\n\t\tNAME as string,\n\t\tLOCATION as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimWarehouse\nsource(output(\n\t\tPRODUCT_WK as integer,\n\t\tWAREHOUSE_WK as integer,\n\t\tTOTAL_STOCK as integer,\n\t\tREORDER_STOCK as integer,\n\t\tCURRENT_STOCK as integer,\n\t\tOrderDate as integer,\n\t\tFlag as integer,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> StockFact\nsource(output(\n\t\tOrderDate as integer,\n\t\tCUSTOMER_WK as integer,\n\t\tORDER_WK as integer,\n\t\tPRODUCT_WK as integer,\n\t\tQUANTITY_ORDERED as integer,\n\t\tAMOUNT as decimal(10,2),\n\t\tWAREHOUSE_WK as integer,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> OrderFact\nsource1, DimProduct lookup(PRODUCT_NAME == DimProduct@NAME,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 select(mapColumn(\n\t\tWAREHOUSE_ID,\n\t\tPRODUCT_WK,\n\t\tTOTAL_STOCK,\n\t\tREORDER_POINT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, DimWarehouse lookup(Select1@WAREHOUSE_ID == DimWarehouse@WAREHOUSE_ID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup2\nLookup2 select(mapColumn(\n\t\tPRODUCT_WK,\n\t\tTOTAL_STOCK,\n\t\tREORDER_POINT,\n\t\tWAREHOUSE_WK,\n\t\tModifiedDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> WarehouseStockInfo\nOrderFact, WarehouseStockInfo lookup(OrderFact@WAREHOUSE_WK == WarehouseStockInfo@WAREHOUSE_WK\n\t&& OrderFact@PRODUCT_WK == WarehouseStockInfo@PRODUCT_WK,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup3\nLookup3 select(mapColumn(\n\t\tOrderDate,\n\t\tPRODUCT_WK = {OrderFact@PRODUCT_WK},\n\t\tQUANTITY_ORDERED,\n\t\tWAREHOUSE_WK = {OrderFact@WAREHOUSE_WK},\n\t\tModifiedDate = {OrderFact@ModifiedDate},\n\t\tTOTAL_STOCK,\n\t\tREORDER_POINT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect4 derive(ModifiedDate = currentTimestamp(),\n\t\tCURRENT_STOCK = TOTAL_STOCK-QUANTITY_ORDERED) ~> ModifiedData\nSelect3, StockFact exists(Select3@PRODUCT_WK == StockFact@PRODUCT_WK\n\t&& Select3@WAREHOUSE_WK == StockFact@WAREHOUSE_WK\n\t&& Select3@OrderDate == StockFact@OrderDate,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists1\nExists1, StockFact lookup(Select3@PRODUCT_WK == StockFact@PRODUCT_WK\n\t&& Select3@OrderDate == StockFact@OrderDate\n\t&& Select3@WAREHOUSE_WK == StockFact@WAREHOUSE_WK,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup4\nLookup4 select(mapColumn(\n\t\tOrderDate = {Select3@OrderDate},\n\t\tPRODUCT_WK = {Select3@PRODUCT_WK},\n\t\tQUANTITY_ORDERED,\n\t\tWAREHOUSE_WK = {Select3@WAREHOUSE_WK},\n\t\tModifiedDate = {Select3@ModifiedDate},\n\t\tTOTAL_STOCK = {Select3@TOTAL_STOCK},\n\t\tREORDER_STOCK = REORDER_POINT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nModifiedData derive(Flag = iif(lesserOrEqual(CURRENT_STOCK,REORDER_STOCK),1,0)) ~> Flag\nFlag alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tPRODUCT_WK as integer,\n\t\tWAREHOUSE_WK as integer,\n\t\tTOTAL_STOCK as integer,\n\t\tREORDER_STOCK as integer,\n\t\tCURRENT_STOCK as integer,\n\t\tOrderDate as integer,\n\t\tFlag as integer,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['PRODUCT_WK','WAREHOUSE_WK','OrderDate'],\n\tformat: 'table',\n\tmapColumn(\n\t\tPRODUCT_WK,\n\t\tWAREHOUSE_WK,\n\t\tTOTAL_STOCK,\n\t\tREORDER_STOCK,\n\t\tCURRENT_STOCK,\n\t\tOrderDate,\n\t\tFlag,\n\t\tModifiedDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}