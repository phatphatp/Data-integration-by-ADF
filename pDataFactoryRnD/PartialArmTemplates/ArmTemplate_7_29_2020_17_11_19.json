{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pDataFactoryRnD"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ProfitReport')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Order_Fact",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "DimProduct",
								"type": "DatasetReference"
							},
							"name": "DimProduct"
						},
						{
							"dataset": {
								"referenceName": "DimDate",
								"type": "DatasetReference"
							},
							"name": "DimDate"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ProfitReport",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Lookup1"
						},
						{
							"name": "SumProfit"
						},
						{
							"name": "Lookup2"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "ConvertToDate"
						}
					],
					"script": "source(output(\n\t\tOrderDate as integer,\n\t\tCUSTOMER_WK as integer,\n\t\tORDER_WK as integer,\n\t\tPRODUCT_WK as integer,\n\t\tQUANTITY_ORDERED as integer,\n\t\tAMOUNT as decimal(10,2),\n\t\tWAREHOUSE_WK as integer,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tPRODUCT_WK as integer,\n\t\tPRODUCT_ID as string,\n\t\tNAME as string,\n\t\tPRODUCT_DES as string,\n\t\tUNIT_PRICE as decimal(10,2),\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimProduct\nsource(output(\n\t\tDay_WK as integer,\n\t\tMonth_WK as integer,\n\t\tFullDate as timestamp,\n\t\tYear_Code as integer,\n\t\tMonth_Code as integer,\n\t\tMonth_Name as string,\n\t\tWeekDay_Code as integer,\n\t\tDay_Name as string,\n\t\tIs_WeekDay as boolean,\n\t\tNumberOfWorkDays as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimDate\nLookup1 select(mapColumn(\n\t\tOrderDate,\n\t\tPRODUCT_WK = source1@PRODUCT_WK,\n\t\tPRODUCT_NAME = NAME,\n\t\tPROFIT = AMOUNT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nsource1, DimProduct lookup(source1@PRODUCT_WK == DimProduct@PRODUCT_WK,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nFilter1 aggregate(groupBy(OrderDate,\n\t\tPRODUCT_WK,\n\t\tPRODUCT_NAME),\n\tPROFIT = sum(PROFIT)) ~> SumProfit\nSelect1, DimDate lookup(OrderDate == Day_WK,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup2\nLookup2 select(mapColumn(\n\t\tOrderDate,\n\t\tPRODUCT_WK,\n\t\tPRODUCT_NAME,\n\t\tPROFIT,\n\t\tFullDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nConvertToDate filter(FullDate == currentDate()) ~> Filter1\nSelect2 derive(FullDate = toDate(toString(FullDate,'yyyy-MM-dd'))) ~> ConvertToDate\nSumProfit sink(input(\n\t\tOrderDate as integer,\n\t\tPRODUCT_WK as integer,\n\t\tPRODUCT_NAME as string,\n\t\tPROFIT as decimal(10,2)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['delete from [out].[ProfitReport]'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		}
	]
}