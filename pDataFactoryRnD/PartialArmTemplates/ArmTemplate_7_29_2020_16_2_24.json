{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pDataFactoryRnD"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FactOrder')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DimCus",
								"type": "DatasetReference"
							},
							"name": "DimCus"
						},
						{
							"dataset": {
								"referenceName": "DimProduct",
								"type": "DatasetReference"
							},
							"name": "DimProduct"
						},
						{
							"dataset": {
								"referenceName": "DimDate",
								"type": "DatasetReference"
							},
							"name": "DimDate"
						},
						{
							"dataset": {
								"referenceName": "OrderTable",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "Order_Fact",
								"type": "DatasetReference"
							},
							"name": "OrderFact"
						},
						{
							"dataset": {
								"referenceName": "DimOrder",
								"type": "DatasetReference"
							},
							"name": "DimOrder"
						},
						{
							"dataset": {
								"referenceName": "DimWarehouse",
								"type": "DatasetReference"
							},
							"name": "DimWarehouse"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Order_Fact",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "LookupCus"
						},
						{
							"name": "Select1"
						},
						{
							"name": "LookupPro"
						},
						{
							"name": "Select2"
						},
						{
							"name": "LookupDate"
						},
						{
							"name": "Select4"
						},
						{
							"name": "ExistsOrderFact"
						},
						{
							"name": "LookupFact"
						},
						{
							"name": "ModifiedData"
						},
						{
							"name": "Select6"
						},
						{
							"name": "LookupOrder"
						},
						{
							"name": "Select3"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "LookupWare"
						},
						{
							"name": "Select5"
						},
						{
							"name": "ExistCus"
						}
					],
					"script": "source(output(\n\t\tCUSTOMER_WK as integer,\n\t\tCUSTOMER_ID as integer,\n\t\tFULL_NAME as string,\n\t\tEMAIL as string,\n\t\tPHONE as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimCus\nsource(output(\n\t\tPRODUCT_WK as integer,\n\t\tPRODUCT_ID as string,\n\t\tNAME as string,\n\t\tPRODUCT_DES as string,\n\t\tUNIT_PRICE as decimal(10,2),\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimProduct\nsource(output(\n\t\tDay_WK as integer,\n\t\tMonth_WK as integer,\n\t\tFullDate as timestamp,\n\t\tYear_Code as integer,\n\t\tMonth_Code as integer,\n\t\tMonth_Name as string,\n\t\tWeekDay_Code as integer,\n\t\tDay_Name as string,\n\t\tIs_WeekDay as boolean,\n\t\tNumberOfWorkDays as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimDate\nsource(output(\n\t\tCUSTOMER_ID as integer,\n\t\tCUSTOMER_ADDRESS as string,\n\t\tPRODUCT_ID as string,\n\t\tPNAME as string,\n\t\tCATEGORY as string,\n\t\tSUB_CATEGORY as string,\n\t\tPRODUCT_DESCRIPTION as string,\n\t\tUNIT_SELL_PRICE as decimal(10,2),\n\t\tCURRENCY as string,\n\t\tQUANTITY_ORDERED as integer,\n\t\tWAREHOUSE as string,\n\t\tORDER_DATE as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tOrderDate as integer,\n\t\tCUSTOMER_WK as integer,\n\t\tORDER_WK as integer,\n\t\tPRODUCT_WK as integer,\n\t\tQUANTITY_ORDERED as integer,\n\t\tAMOUNT as decimal(10,2),\n\t\tWAREHOUSE_WK as integer,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> OrderFact\nsource(output(\n\t\tORDER_WK as integer,\n\t\tORDER_DATE as timestamp,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimOrder\nsource(output(\n\t\tWAREHOUSE_WK as integer,\n\t\tWAREHOUSE_ID as string,\n\t\tNAME as string,\n\t\tLOCATION as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimWarehouse\nExistCus, DimCus lookup(source1@CUSTOMER_ID == DimCus@CUSTOMER_ID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupCus\nLookupCus select(mapColumn(\n\t\tCUSTOMER_WK,\n\t\tCUSTOMER_ADDRESS,\n\t\tPRODUCT_ID,\n\t\tPNAME,\n\t\tQUANTITY_ORDERED,\n\t\tORDER_DATE,\n\t\tWAREHOUSE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, DimProduct lookup(Select1@PRODUCT_ID == DimProduct@PRODUCT_ID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupPro\nLookupPro select(mapColumn(\n\t\tCUSTOMER_WK,\n\t\tPRODUCT_WK,\n\t\tQUANTITY_ORDERED,\n\t\tORDER_DATE,\n\t\tUNIT_PRICE,\n\t\tWAREHOUSE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect3, DimDate lookup(ORDER_DATE == FullDate,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDate\nLookupDate select(mapColumn(\n\t\tCUSTOMER_WK,\n\t\tPRODUCT_WK,\n\t\tQUANTITY_ORDERED,\n\t\tORDER_DATE,\n\t\tUNIT_PRICE,\n\t\tORDER_WK,\n\t\tWAREHOUSE,\n\t\tDay_WK\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nSelect5, OrderFact exists(Day_WK == OrderDate\n\t&& Select5@CUSTOMER_WK == OrderFact@CUSTOMER_WK\n\t&& Select5@PRODUCT_WK == OrderFact@PRODUCT_WK,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistsOrderFact\nExistsOrderFact, OrderFact lookup(Day_WK == OrderDate\n\t&& Select5@CUSTOMER_WK == OrderFact@CUSTOMER_WK\n\t&& Select5@PRODUCT_WK == OrderFact@PRODUCT_WK,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupFact\nLookupFact derive(ModifiedDate = currentTimestamp(),\n\t\tAMOUNT = UNIT_PRICE*Select5@QUANTITY_ORDERED) ~> ModifiedData\nModifiedData select(mapColumn(\n\t\tCUSTOMER_WK = Select5@CUSTOMER_WK,\n\t\tPRODUCT_WK = Select5@PRODUCT_WK,\n\t\tQUANTITY_ORDERED = Select5@QUANTITY_ORDERED,\n\t\tORDER_WK = Select5@ORDER_WK,\n\t\tOrderDate = Day_WK,\n\t\tWAREHOUSE_WK = Select5@WAREHOUSE_WK,\n\t\tModifiedDate,\n\t\tAMOUNT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nSelect2, DimOrder lookup(Select2@ORDER_DATE == DimOrder@ORDER_DATE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupOrder\nLookupOrder select(mapColumn(\n\t\tCUSTOMER_WK,\n\t\tPRODUCT_WK,\n\t\tQUANTITY_ORDERED,\n\t\tORDER_DATE = Select2@ORDER_DATE,\n\t\tUNIT_PRICE,\n\t\tORDER_WK,\n\t\tWAREHOUSE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect6 alterRow(upsertIf(true())) ~> AlterRow1\nSelect4, DimWarehouse lookup(WAREHOUSE == NAME,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupWare\nLookupWare select(mapColumn(\n\t\tCUSTOMER_WK,\n\t\tPRODUCT_WK,\n\t\tQUANTITY_ORDERED,\n\t\tORDER_DATE,\n\t\tUNIT_PRICE,\n\t\tORDER_WK,\n\t\tWAREHOUSE,\n\t\tDay_WK,\n\t\tWAREHOUSE_WK\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nsource1, DimCus exists(source1@CUSTOMER_ID == DimCus@CUSTOMER_ID,\n\tnegate:false,\n\tbroadcast: 'auto')~> ExistCus\nAlterRow1 sink(input(\n\t\tOrderDate as integer,\n\t\tCUSTOMER_WK as integer,\n\t\tORDER_WK as integer,\n\t\tPRODUCT_WK as integer,\n\t\tQUANTITY_ORDERED as integer,\n\t\tAMOUNT as decimal(10,2),\n\t\tWAREHOUSE_WK as integer,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['CUSTOMER_WK','PRODUCT_WK','ORDER_WK'],\n\tformat: 'table',\n\tmapColumn(\n\t\tOrderDate,\n\t\tCUSTOMER_WK,\n\t\tORDER_WK,\n\t\tPRODUCT_WK,\n\t\tQUANTITY_ORDERED,\n\t\tAMOUNT,\n\t\tWAREHOUSE_WK,\n\t\tModifiedDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactStock')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "WarehouseTable",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "DimProduct",
								"type": "DatasetReference"
							},
							"name": "DimProduct"
						},
						{
							"dataset": {
								"referenceName": "DimWarehouse",
								"type": "DatasetReference"
							},
							"name": "DimWarehouse"
						},
						{
							"dataset": {
								"referenceName": "Stock_Fact",
								"type": "DatasetReference"
							},
							"name": "StockFact"
						},
						{
							"dataset": {
								"referenceName": "Order_Fact",
								"type": "DatasetReference"
							},
							"name": "OrderFact"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Stock_Fact",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "LookupPro"
						},
						{
							"name": "Select1"
						},
						{
							"name": "LookupWarehouse"
						},
						{
							"name": "WarehouseStockInfo"
						},
						{
							"name": "LookupWarehouseStockInfo"
						},
						{
							"name": "Select3"
						},
						{
							"name": "ModifiedData"
						},
						{
							"name": "ExistsStockFact"
						},
						{
							"name": "LookupExistsStockFact"
						},
						{
							"name": "Select4"
						},
						{
							"name": "Flag"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tWAREHOUSE_ID as string,\n\t\tNAME as string,\n\t\tLOCATION as string,\n\t\tPRODUCT_NAME as string,\n\t\tTOTAL_STOCK as integer,\n\t\tREORDER_POINT as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tPRODUCT_WK as integer,\n\t\tPRODUCT_ID as string,\n\t\tNAME as string,\n\t\tPRODUCT_DES as string,\n\t\tUNIT_PRICE as decimal(10,2),\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimProduct\nsource(output(\n\t\tWAREHOUSE_WK as integer,\n\t\tWAREHOUSE_ID as string,\n\t\tNAME as string,\n\t\tLOCATION as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimWarehouse\nsource(output(\n\t\tPRODUCT_WK as integer,\n\t\tWAREHOUSE_WK as integer,\n\t\tTOTAL_STOCK as integer,\n\t\tREORDER_STOCK as integer,\n\t\tCURRENT_STOCK as integer,\n\t\tOrderDate as integer,\n\t\tFlag as integer,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> StockFact\nsource(output(\n\t\tOrderDate as integer,\n\t\tCUSTOMER_WK as integer,\n\t\tORDER_WK as integer,\n\t\tPRODUCT_WK as integer,\n\t\tQUANTITY_ORDERED as integer,\n\t\tAMOUNT as decimal(10,2),\n\t\tWAREHOUSE_WK as integer,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> OrderFact\nsource1, DimProduct lookup(PRODUCT_NAME == DimProduct@NAME,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupPro\nLookupPro select(mapColumn(\n\t\tWAREHOUSE_ID,\n\t\tPRODUCT_WK,\n\t\tTOTAL_STOCK,\n\t\tREORDER_POINT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, DimWarehouse lookup(Select1@WAREHOUSE_ID == DimWarehouse@WAREHOUSE_ID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupWarehouse\nLookupWarehouse select(mapColumn(\n\t\tPRODUCT_WK,\n\t\tWAREHOUSE_WK,\n\t\tTOTAL_STOCK,\n\t\tREORDER_POINT,\n\t\tModifiedDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> WarehouseStockInfo\nOrderFact, WarehouseStockInfo lookup(OrderFact@WAREHOUSE_WK == WarehouseStockInfo@WAREHOUSE_WK\n\t&& OrderFact@PRODUCT_WK == WarehouseStockInfo@PRODUCT_WK,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupWarehouseStockInfo\nLookupWarehouseStockInfo select(mapColumn(\n\t\tOrderDate,\n\t\tPRODUCT_WK = OrderFact@PRODUCT_WK,\n\t\tQUANTITY_ORDERED,\n\t\tWAREHOUSE_WK = OrderFact@WAREHOUSE_WK,\n\t\tModifiedDate = OrderFact@ModifiedDate,\n\t\tTOTAL_STOCK,\n\t\tREORDER_POINT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect4 derive(ModifiedDate = currentTimestamp(),\n\t\tCURRENT_STOCK = TOTAL_STOCK-QUANTITY_ORDERED) ~> ModifiedData\nSelect3, StockFact exists(Select3@PRODUCT_WK == StockFact@PRODUCT_WK\n\t&& Select3@WAREHOUSE_WK == StockFact@WAREHOUSE_WK\n\t&& Select3@OrderDate == StockFact@OrderDate,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistsStockFact\nExistsStockFact, StockFact lookup(Select3@PRODUCT_WK == StockFact@PRODUCT_WK\n\t&& Select3@OrderDate == StockFact@OrderDate\n\t&& Select3@WAREHOUSE_WK == StockFact@WAREHOUSE_WK,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupExistsStockFact\nLookupExistsStockFact select(mapColumn(\n\t\tOrderDate = Select3@OrderDate,\n\t\tPRODUCT_WK = Select3@PRODUCT_WK,\n\t\tQUANTITY_ORDERED,\n\t\tWAREHOUSE_WK = Select3@WAREHOUSE_WK,\n\t\tModifiedDate = Select3@ModifiedDate,\n\t\tTOTAL_STOCK = Select3@TOTAL_STOCK,\n\t\tREORDER_STOCK = REORDER_POINT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nModifiedData derive(Flag = iif(lesserOrEqual(CURRENT_STOCK,REORDER_STOCK),1,0)) ~> Flag\nFlag alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tPRODUCT_WK as integer,\n\t\tWAREHOUSE_WK as integer,\n\t\tTOTAL_STOCK as integer,\n\t\tREORDER_STOCK as integer,\n\t\tCURRENT_STOCK as integer,\n\t\tOrderDate as integer,\n\t\tFlag as integer,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['PRODUCT_WK','WAREHOUSE_WK','OrderDate'],\n\tformat: 'table',\n\tmapColumn(\n\t\tPRODUCT_WK,\n\t\tWAREHOUSE_WK,\n\t\tTOTAL_STOCK,\n\t\tREORDER_STOCK,\n\t\tCURRENT_STOCK,\n\t\tOrderDate,\n\t\tFlag,\n\t\tModifiedDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		}
	]
}