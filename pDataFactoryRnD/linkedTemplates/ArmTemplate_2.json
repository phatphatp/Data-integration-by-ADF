{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pDataFactoryRnD"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CUSTOMER",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists",
								"itemName",
								"itemType",
								"structure",
								"contentMD5",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ExistingCustomerFile",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata1').output.exists\n",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ErrorEmail1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ErrorEmail",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "CustomerIn",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "CustomerIn",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"Customer": {},
												"CusTable": {},
												"sink1": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Metadata2",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ORDER_DETAILS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"structure",
								"contentMD5"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata3",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "WAREHOUSE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"contentMD5",
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ExistingOrderDetailFile",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata2').output.exists\n",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ErrorEmail2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ErrorEmail",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "OrderIn",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "OrderIn",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"source1": {},
												"OrderTable": {},
												"sink1": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					},
					{
						"name": "ExistingWarehouserFile",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata3').output.exists\n",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ErrorEmail3",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ErrorEmail",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "WarehouseIn",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "WarehouseIn",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"source1": {},
												"WarehouseTable": {},
												"sink1": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Main"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MainPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoadLandingTable",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LoadDimTable",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LoadLandingTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DimTable",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LoadFactTable",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LoadDimTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FactTable",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DailyReport",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LoadFactTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DailyReport",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Sent Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "DailyReport",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-17.southeastasia.logic.azure.com:443/workflows/ee2ef7bbf9ba48b5874800cb70bde8b4/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=a0NEDQ36xZUCzxmg9uPbCgjnCDeKsyuDtS74kW3x1kU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"Title\":\"PIPELINE RUN FINISHED\",\n\"Message\":\"DEMO-PIPELINE FINISHED RUNNING SUCCESSFULLY ( 2 DailyReport )\",\n\"Color\":\"Green\",\n\"DataFactoryName\":\"@{pipeline().DataFactory}\",\n\"PipelineName\":\"@{pipeline().Pipeline}\",\n\"PipeLineId\":\"@{pipeline().RunId}\",\n\"Time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Sent error email3",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "DailyReport",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-04.southeastasia.logic.azure.com:443/workflows/ac880e184263418eadd3ba15e9bf7ee3/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=2GEVepc_1G4uMKqS6OqQAuv_vl1NBlyyJqUTj_Ix1EI",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"Title\":\"PIPELINE RUN FAILED\",\n\"Message\":\"DEMO-PIPELINE FINISHED RUNNING FAILED!\",\n\"Color\":\"Red\",\n\"DataFactoryName\":\"@{pipeline().DataFactory}\",\n\"PipelineName\":\"@{pipeline().Pipeline}\",\n\"PipeLineId\":\"@{pipeline().RunId}\",\n\"Time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Sent error email2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "LoadFactTable",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-04.southeastasia.logic.azure.com:443/workflows/ac880e184263418eadd3ba15e9bf7ee3/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=2GEVepc_1G4uMKqS6OqQAuv_vl1NBlyyJqUTj_Ix1EI",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"Title\":\"PIPELINE RUN FAILED\",\n\"Message\":\"DEMO-PIPELINE FINISHED RUNNING FAILED!\",\n\"Color\":\"Red\",\n\"DataFactoryName\":\"@{pipeline().DataFactory}\",\n\"PipelineName\":\"@{pipeline().Pipeline}\",\n\"PipeLineId\":\"@{pipeline().RunId}\",\n\"Time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Sent error email1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "LoadDimTable",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-04.southeastasia.logic.azure.com:443/workflows/ac880e184263418eadd3ba15e9bf7ee3/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=2GEVepc_1G4uMKqS6OqQAuv_vl1NBlyyJqUTj_Ix1EI",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"Title\":\"PIPELINE RUN FAILED\",\n\"Message\":\"DEMO-PIPELINE FINISHED RUNNING FAILED!\",\n\"Color\":\"Red\",\n\"DataFactoryName\":\"@{pipeline().DataFactory}\",\n\"PipelineName\":\"@{pipeline().Pipeline}\",\n\"PipeLineId\":\"@{pipeline().RunId}\",\n\"Time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Main"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyReportTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger daily-report pipeline everyday",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MainPipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-07-25T12:22:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MainPipeline')]"
			]
		}
	]
}